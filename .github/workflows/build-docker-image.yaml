name: Build

on:
  workflow_dispatch:
  schedule:
    - cron: '0 9 * * *'
  push:
    branches:
      - main
    paths-ignore:
      - '**/LICENSE'
      - '**/*.md'
  pull_request:
    paths-ignore:
      - '**/LICENSE'
      - '**/*.md'

env:
  DOCKER-CONTEXT: ./
  DOCKER-FILE: ./Dockerfile
  DOCKER-IMAGE: trainee 

jobs:
  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest

    strategy:
      matrix:
        tag: [humble, jazzy]

    steps:
      - uses: actions/checkout@v4

      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare Cache Directories
        run: |
          mkdir -p ${{ github.workspace }}/cache/install/
          mkdir -p ${{ github.workspace }}/cache/build/
          mkdir -p ${{ github.workspace }}/cache/log/
          mkdir -p ${{ github.workspace }}/cache/vcs_hashes/

          # install ディレクトリにファイル作成
          for i in {0..4}; do
            echo "$i" > ${{ github.workspace }}/cache/install/file_$i.txt
          done

          # build ディレクトリにファイル作成
          for i in {0..4}; do
            echo "$i" > ${{ github.workspace }}/cache/build/file_$i.txt
          done

          # log ディレクトリにファイル作成
          for i in {0..4}; do
            echo "$i" > ${{ github.workspace }}/cache/log/file_$i.txt
          done

          # vcs_hashes ディレクトリにファイル作成
          for i in {0..4}; do
            echo "$i" > ${{ github.workspace }}/cache/vcs_hashes/file_$i.txt
          done

          # 確認のため出力
          echo "=== install ==="
          ls -la ${{ github.workspace }}/cache/install/
          echo "=== build ==="
          ls -la ${{ github.workspace }}/cache/build/
          echo "=== log ==="
          ls -la ${{ github.workspace }}/cache/log/
          echo "=== vcs_hashes ==="
          ls -la ${{ github.workspace }}/cache/vcs_hashes/


      - name: Restore Cache Build Artifacts
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/cache/install/
            ${{ github.workspace }}/cache/build/
            ${{ github.workspace }}/cache/log/
            ${{ github.workspace }}/cache/vcs_hashes/
          key: build-artifacts-${{ matrix.tag }}-${{ hashFiles('cache/**') }}
          restore-keys: |
            build-artifacts-${{ matrix.tag }}-

      - name: Set up Docker image tag
        run: echo "DOCKER_IMAGE_TAG=ghcr.io/$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')/${{ env.DOCKER-IMAGE }}:${{ matrix.tag }}" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ${{ env.DOCKER-CONTEXT }}
          file: ${{ env.DOCKER-FILE }}
          tags: ${{ env.DOCKER_IMAGE_TAG }}
          build-args: |
            USERNAME=runner
            ROS_DISTRO=${{ matrix.tag }}
          ssh: default=${{ env.SSH_AUTH_SOCK }}
          no-cache: true
          push: false

      - name: Save Cache Build Artifacts
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/cache/install/
            ${{ github.workspace }}/cache/build/
            ${{ github.workspace }}/cache/log/
            ${{ github.workspace }}/cache/vcs_hashes/
          key: build-artifacts-${{ matrix.tag }}-${{ hashFiles('cache/**') }}
          restore-keys: |
            build-artifacts-${{ matrix.tag }}-